package com.chengtao.utils;

import java.util.ArrayList;

import com.chengtao.entity.ChinaNode;
import com.chengtao.iterator.CompositeIterator;

/**
 * the util to create node tree
 * @author ChengTao
 *
 */
public class NodeUtils {
	//private static ArrayList<ChinaNode> nodes = null;
	private static ChinaNode root = null;
	/**
	 * get the composite iterator 
	 * @param chinaNodes chinaNodes the list of the nodes
	 * @return
	 */
	public static CompositeIterator getNodeIterator(ArrayList<ChinaNode> chinaNodes) {
		if (nodes == null) {
			synchronized (NodeUtils.class) {
				if (nodes == null) {
					getRootChinaNode(chinaNodes);
				}
			}
		}
		return new CompositeIterator(nodes.iterator());
	}
	
	/**
	 * get the root node the tree
	 * @param chinaNodes the list of the nodes
	 * @return
	 */
	public static ChinaNode getRootChinaNode(ArrayList<ChinaNode> chinaNodes) {
		if (root == null) {
			synchronized (NodeUtils.class) {
				if (root == null) {
					for (ChinaNode chinaNodeParent : chinaNodes) {
						if (chinaNodeParent.getParentName().equals("null")) {
							root = chinaNodeParent;
							chinaNodeParent.setParent(null);
						}
						for (ChinaNode chinaNodeChild : chinaNodes) {
							if (chinaNodeChild.getParentName().equals(chinaNodeParent.getSelfName())) {
								chinaNodeParent.addChild(chinaNodeChild);
								chinaNodeChild.setParent(chinaNodeParent);
							}
						}
					}
				}
			}
		}
		return root;
	}
}
