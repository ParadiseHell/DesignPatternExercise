package com.chengtao.entity;

/**
 * 复数类
 * 
 * @author ChengTao
 *
 */
public class Complex {
	private float real;
	private float imaginary;

	/**
	 * 
	 * @param real
	 *            实部
	 * @param imaginary
	 *            虚部
	 */
	public Complex(float real, float imaginary) {
		super();
		this.real = real;
		this.imaginary = imaginary;
	}

	public float getReal() {
		return real;
	}

	public void setReal(float real) {
		this.real = real;
	}

	public float getImaginary() {
		return imaginary;
	}

	public void setImaginary(float imaginary) {
		this.imaginary = imaginary;
	}

	/**
	 * 拷贝方法
	 */
	@Override
	public Complex clone() {
		return new Complex(this.real, this.imaginary);
	}

	@Override
	public String toString() {
		String complexStr = "";
		if (this.real != 0) {
			complexStr += this.getReal();
			if (this.imaginary > 0) {
				complexStr += " + " + this.getImaginary() + "i";
			} else if (this.imaginary < 0) {
				complexStr += " - " + (-1 * this.getImaginary()) + "i";
			}
		} else {
			if (this.imaginary > 0) {
				complexStr += this.getImaginary() + "i";
			} else if (this.imaginary < 0) {
				complexStr += " - " + (-1 * this.getImaginary()) + "i";
			}
		}
		return complexStr;
	}

	/**
	 * 复数加法
	 * 
	 * @param c
	 *            一个复数
	 * @return
	 */
	public Complex add(Complex c) {
		return new Complex(this.real + c.real, this.imaginary + c.imaginary);
	}

	/**
	 * 复数减法
	 * 
	 * @param c
	 *            一个复数
	 * @return
	 */
	public Complex sub(Complex c) {
		return new Complex(this.real - c.real, this.imaginary - c.imaginary);
	}

	public Complex multi(Complex c) {
		return new Complex(((this.real * c.real ) - (this.imaginary * c.imaginary)), imaginary);
	}
	
	/**
	 * 显示复数
	 */
	public void displayComplex() {
		System.out.println(this.toString());
	}

	/**
	 * 判断复数是否为0
	 * 
	 * @return 为 ? 0 true : false
	 */
	public boolean isZero() {
		if (this.real == 0 && this.imaginary == 0) {
			return true;
		}
		return false;
	}

	/**
	 * 获取复数的相反数
	 * 
	 * @return
	 */
	public Complex getOppositeComplex() {
		return new Complex((-1 * this.real), (-1 * this.imaginary));
	}
}
