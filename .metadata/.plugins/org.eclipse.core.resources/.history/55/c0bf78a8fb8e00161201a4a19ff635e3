package com.ct.factory.utils;

import java.io.File;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

import com.ct.factory.impl.TVFactory;

/**
 * XML工具类
 * 
 * @author ChengTao
 *
 */
public class XMLUtils {
	// ----------------常量
	private final static String FACTORY_PACKAGE_PATH = "com.ct.factory";
	private final static String CONFIG_PATH = "config.xml";
	private final static String TAG_WRAP_NAME = "TV";
	private final static String TAG_tv_NAME = "TVName";
	private final static String TAG_TV_CLASS = "TVClass";
	// ------------------变量
	private static DocumentBuilderFactory dbFactory = null;
	private static DocumentBuilder builder = null;

	/**
	 * 根据电视名返回电视工厂类
	 * 
	 * @param tvName
	 * @return
	 * @throws ParserConfigurationException
	 */
	public static TVFactory getClassFromTVName(String tvName) throws Exception {
		TVFactory factory = null;
		initDocumentBuilderFactory();
		Document doc = builder.parse(new File(CONFIG_PATH));
		NodeList list = doc.getElementsByTagName(TAG_WRAP_NAME);
		for (int i = 0; i < list.getLength(); i++) {
			Element element = (Element) list.item(i);
			StringUtils.printlnString(element.getElementsByTagName(TAG_tv_NAME).item(0).getTextContent());
			StringUtils.printlnString(element.getElementsByTagName(TAG_TV_CLASS).item(0).getTextContent());
			if (element.getElementsByTagName(TAG_tv_NAME).item(0).getTextContent().equalsIgnoreCase(tvName)) {
				String className = element.getElementsByTagName(TAG_TV_CLASS).item(0).getTextContent();
				@SuppressWarnings("rawtypes")
				Class c = Class.forName(FACTORY_PACKAGE_PATH + className);
				factory = (TVFactory) c.newInstance();
			}
		}
		return factory;
	}

	/**
	 * 初始化DocumentBuilderFactory
	 * 
	 * @throws ParserConfigurationException
	 */
	private static void initDocumentBuilderFactory()
			throws ParserConfigurationException {
		if (dbFactory == null) {
			synchronized (XMLUtils.class) {
				if (dbFactory == null) {
					dbFactory = DocumentBuilderFactory.newInstance();
					builder = dbFactory.newDocumentBuilder();
				}
			}
		}
	}
}
