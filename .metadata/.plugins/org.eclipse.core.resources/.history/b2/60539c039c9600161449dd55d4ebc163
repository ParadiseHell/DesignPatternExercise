package com.chengtao.entity;

import java.util.ArrayList;

/**
 * 多项式类
 * 
 * @author ChengTao
 *
 */
public class Polynomial {
	private char arg;
	private Complex[] complexs;
	/**
	 * 用于显示参数不同的多项式
	 */
	private ArrayList<Polynomial> differPolynomial;
	/**
	 * 
	 * @param arg
	 *            变量
	 * @param complexs
	 *            多个复数
	 */
	public Polynomial(char arg, Complex... complexs) {
		this.arg = arg;
		this.complexs = complexs;
	}

	@Override
	public String toString() {
		String polynomialStr = "";
		for (int i = 0; i < complexs.length; i++) {
			if (i != 0) {
				polynomialStr += " + ";
			}
			if (!complexs[i].toString().equals("")) {
				polynomialStr += "( " + complexs[i].toString() + " )"
						+ (i > 0 ? (this.arg + (i > 1 ? "^" + i : "")) : "");
			}
		}
		return polynomialStr;
	}

	/**
	 * 拷贝方法
	 */
	@Override
	public Polynomial clone() {
		return new Polynomial(this.arg, this.complexs);
	}

	/**
	 * 多项式加法
	 * 
	 * @param p
	 */
	public Polynomial add(Polynomial p) {
		Polynomial newP = null;
		if (this.arg == p.arg) {
			for (int i = 0; i < this.complexs.length; i++) {
				if (i == p.complexs.length ) {
					break;
				}
				
			}
		} else {
			
		}
		return newP;
	}
	
	/**
	 * 
	 * @param P
	 */
	private Polynomial addDifferPolynomial(Polynomial P) {
		if (this.differPolynomial == null) {
			this.differPolynomial = new ArrayList<>();
		}
		differPolynomial.add(this);
		
	}
	
	/**
	 * 显示多项式
	 */
	public void display() {
		if (differPolynomial != null) {
			String differStr = "";
			for (int i = 0; i < differPolynomial.size(); i++) {
				differStr += differPolynomial.get(i).toString();
			}
			System.out.println(differStr);
		} else {
			System.out.println(this.toString());
		}
	}
}
